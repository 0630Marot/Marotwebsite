<!DOCTYPE html>
<html lang="zn-CH">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>用户个人界面</title>
    <style>
        /* #word-desc{
            min-height: 1em;
        } */
        html {
            font-size: 20px;
        }

        button {
            font-size: 20px;
        }

        #word-field {
            width: 500px;
            margin: 0 auto;
        }

        /* #word-info {
            font-size: 30px;
        } */

        #word-text {
            font-size: 25px;
            width: 15em;
            height: 3em;
            margin-bottom: 0.5em;
        }

        #yd-dict {
            font-size: 25px;
        }

        #word-desc {
            color: green;
        }

        .word-right {
            color: green;
        }

        .word-wrong {
            color: red
        }

        .us {
            float: right;
        }

        #active-dic {
            font-size: 18px;
        }

        #dic-upload {
            float: right;
            font-size: 18px;
        }
    </style>
</head>

<body onkeydown="handleKeyDown(event)">
    <h3 id="login-msg"></h3>
    <%- permission %>
        <hr>
        <div id="dic-field">
            <span>当前激活词库：</span>
            <select id="active-dic" onchange="onChangeDic()"></select>
            <form method="post" enctype="multipart/form-data" id="dic-upload">
                <input type="button" value="上传单词" onclick="submitTxt()">
                <input type="file" name="textFile">
            </form>
        </div>
        <hr>
        <div id="word-field">
            <span id="word-index"></span>.标记：<span id="word-mark"></span><br>
            <p id="word-trueword"></p>
            <input id="word-text" onclick="word.classList.remove('word-wrong');word.classList.remove('word-right');"
                type="text">
            <audio id="audioPlayer"></audio>
            <br>
            <button id="word-check" onclick="checkword()">检查</button>
            <button id="word-answer" onclick="getAns()">查看答案</button>
            <button id="word-change" onclick="check(2)">跳转</button>
            <hr>
            <button id="word-last" onclick="check(3)">上一个</button>
            <button id="word-wrong" onclick="check(4)">标记+1</button>
            <button id="word-right" onclick="check(5)">标记-1</button>
            <button id="word-next" onclick="check(6)">下一个</button>
            <br>
            <input type="checkbox" id="review-mode" name="isreview">复习模式
            <input type="number" id="reviwe-level" name="reviewLevel">
            <div id="dictionary">
                <div id="uk">
                    <span id="uk-p"></span>
                    <button class="audio" onclick="audioSet(1)">英式发音</button>
                </div>
                <div id="us">
                    <span id="us-p"></span>
                    <button class="audio" onclick="audioSet(2)">美式发音</button>
                </div>
                <div id="yd-dict"></div>
                <input type="checkbox" id="et-mode" name="iset">访问词源
                <div id="et">
                    <hr>
                    <button onclick="toggleDisplay(et)">查看词源</button>
                    <div id="et-text"></div>
                </div>
                <div id="wiki">
                    <hr>
                    <button onclick="toggleDisplay(wiki)">查看维基介绍</button>
                    <p id="wiki-text"></p>
                </div>
            </div>
        </div>
        <script>
            let indexNum = 1;
            let wordContent;
            let dicname = "IELTS";
            const word = document.getElementById('word-text');
            const index = document.getElementById('word-index');
            const mark = document.getElementById('word-mark');
            const trueword = document.getElementById('word-trueword');
            const audioPlayer = document.getElementById('audioPlayer');
            const wiki = document.getElementById('wiki-text');
            const et = document.getElementById('et-text');
            const yd = document.getElementById('yd-dict');
            const ukp = document.getElementById('uk-p');
            const usp = document.getElementById('us-p');
            const isR = document.getElementById('review-mode');
            const isE = document.getElementById('et-mode');
            const RL = document.getElementById('reviwe-level');
            const dicOption = document.getElementById('active-dic');
            document / addEventListener('DOMContentLoaded', function () {
                check(0);
                word.focus();
            })
            function audioSet(type) {
                switch (type) {
                    case 1:
                        audioPlayer.src = "https://dict.youdao.com/dictvoice?audio=" + wordContent + "&type=1";
                        break;
                    case 2:
                        audioPlayer.src = "https://dict.youdao.com/dictvoice?audio=" + wordContent + "&type=2";
                        break;
                }
                audioPlayer.play();
            }
            function check(type) {
                word.classList.remove('word-wrong');
                word.classList.remove('word-right');
                // trueword.innerText = '';
                const xhr = new XMLHttpRequest();
                xhr.open('POST', '/users/check');
                xhr.setRequestHeader('Content-Type', 'application/x-www-form-urlencoded');
                if (type === 0) {
                    xhr.send(`type=` + type);
                } else if (type === 2) {
                    xhr.send(`dic=` + dicname + `&type=` + type + `&index=` + word.value);
                }
                else {
                    if (isR.checked && (type === 3 || type === 6)) {
                        xhr.send(`dic=` + dicname + `&type=` + type + `&index=` + indexNum.toString() + `&review=` + RL.value);
                    } else {
                        xhr.send(`dic=` + dicname + `&type=` + type + `&index=` + indexNum.toString());
                    }
                }
                word.value = '';
                xhr.onreadystatechange = function () {
                    if (xhr.readyState === 4) {
                        if (xhr.status >= 200 && xhr.status < 300) {
                            const res = JSON.parse(xhr.response);
                            switch (parseInt(res.type)) {
                                case 0:
                                    for (var i = dicOption.options.length - 1; i >= 0; i--) {
                                        dicOption.remove(i);
                                    }
                                    var options = res.dict;
                                    options.push('创建新词库');
                                    for (var i = 0; i < options.length; i++) {
                                        dicOption.add(new Option(options[i], options[i]));
                                    }
                                    dicOption.options[0].selected = true;
                                    onChangeDic();
                                    break;
                                case 1:
                                    wordContent = res.word;
                                    index.innerHTML = res.index;
                                    mark.innerHTML = res.mark;
                                    if (res.mark > 0) {
                                        mark.style.color = 'red';
                                    } else {
                                        mark.style.color = 'black';
                                    }
                                    trueword.innerText = wordContent;
                                    trueword.style.visibility = 'hidden';
                                    indexNum = parseInt(res.index);
                                    getYD(res.word);
                                    getET(res.word);

                                    break;
                                case 2:
                                    //超出单词范围
                                    // msg.innerHTML = '新建账号';
                                    break;
                                case 3:
                                    mark.innerHTML = res.mark;
                                    break;
                            }
                        }
                    }
                }
            }
            function createNewInvite() {
                const xhr = new XMLHttpRequest();
                xhr.open('POST', '/users/createInvite');
                xhr.setRequestHeader('Content-Type', 'application/x-www-form-urlencoded');
                xhr.send();
                xhr.onreadystatechange = function () {
                    if (xhr.readyState === 4) {
                        if (xhr.status >= 200 && xhr.status < 300) {
                            console.log(xhr.response);
                        }
                    }
                }
            }
            function getYD(word) {
                const xhr = new XMLHttpRequest();
                xhr.open('POST', '/users/yd');
                xhr.setRequestHeader('Content-Type', 'application/x-www-form-urlencoded');
                xhr.send('word=' + word);
                xhr.onreadystatechange = function () {
                    if (xhr.readyState === 4) {
                        if (xhr.status >= 200 && xhr.status < 300) {
                            const jsonObj = window.JSON.parse(xhr.response);
                            if ('error' in jsonObj) {
                                return;
                            }
                            // console.log(jsonObj.wiki.summary);
                            yd.innerHTML = '';
                            for (let i = 0; i < jsonObj.yd[0].trs.length; i++) {
                                var st = jsonObj.yd[0].trs[i].tr[0].l.i.toString();
                                if (st.includes('人名') || st.includes('【名】')) {
                                    continue;
                                }
                                st = st.replace(new RegExp(word, 'gi'), '**');
                                yd.innerHTML += st;
                                yd.innerHTML += '<br>';
                            }
                            ukp.innerHTML = jsonObj.yd[0].ukphone;
                            usp.innerHTML = jsonObj.yd[0].usphone;
                            ukp.style.visibility = 'hidden';
                            usp.style.visibility = 'hidden';
                            if ('' === jsonObj.wiki || jsonObj.wiki[0].summary.toString().includes('may refer')) {
                                document.getElementById('wiki').style.display = 'none';
                                wiki.innerText = '';
                            } else {
                                document.getElementById('wiki').style.display = 'block';
                                wiki.innerText = jsonObj.wiki[0].summary;
                            }
                            wiki.style.display = 'none';
                            // console.log(xhr.response);
                        }
                    }
                }
            }
            function onChangeDic() {
                const op = dicOption.value;
                if (op === '创建新词库') {
                    let newdic = prompt('新词库名为');
                    if (newdic == null) {
                        return;
                    }
                    const xhr = new XMLHttpRequest();
                    xhr.open('POST', '/users/newdic');
                    xhr.setRequestHeader('Content-Type', 'application/x-www-form-urlencoded');
                    xhr.send('dic=' + newdic);
                    xhr.onreadystatechange = function () {
                        if (xhr.readyState === 4) {
                            if (xhr.status >= 200 && xhr.status < 300) {
                                if (xhr.response == 1) {
                                    alert('已有重名词库');
                                    check(0);
                                } else {
                                    var option = document.createElement("option");
                                    dicOption.add(new Option(op, op));
                                    for (var i = 0; i < dicOption.options.length; i++) {
                                        if (dicOption.options[i].value === op) {
                                            dicOption.options[i].selected = true;
                                            break;
                                        }
                                    }
                                }

                            }
                        }
                    }
                }
                else {
                    dicname = op;
                    indexNum = 1;
                    check(1);
                }
            }

            function getET(word) {
                document.getElementById('et').style.display = 'none';
                et.innerText = '';
                if (isE.checked) {
                    const xhr = new XMLHttpRequest();
                    xhr.open('POST', '/users/etymonline');
                    xhr.setRequestHeader('Content-Type', 'application/x-www-form-urlencoded');
                    xhr.send('word=' + word);
                    xhr.onreadystatechange = function () {
                        if (xhr.readyState === 4) {
                            if (xhr.status >= 200 && xhr.status < 300) {
                                const jsonObj = window.JSON.parse(xhr.response);
                                if (jsonObj.word === wordContent && jsonObj.et !== null) {
                                    const parser = new DOMParser();
                                    const doc = parser.parseFromString(jsonObj.et, 'text/html');

                                    if ('' !== doc) {
                                        const aTags = doc.querySelectorAll('a');
                                        // 替换 <a> 标签为 <span>
                                        aTags.forEach(aTag => {
                                            const spanTag = document.createElement('span');
                                            spanTag.innerHTML = aTag.innerHTML;
                                            aTag.parentNode.replaceChild(spanTag, aTag);
                                        });
                                        document.getElementById('et').style.display = 'block';
                                        et.innerHTML = doc.body.innerHTML;
                                    }
                                    et.style.display = 'none';
                                }

                                // console.log(xhr.response);
                            }
                        }
                    }
                }

            }
            function checkword() {
                if (word.value == wordContent) {
                    word.classList.remove('word-wrong');
                    word.classList.add('word-right');
                } else {
                    word.classList.add('word-wrong');
                    word.classList.remove('word-right');
                }
                audioSet(1);
            }
            function getAns() {
                const currentDisplay = window.getComputedStyle(trueword).visibility;
                if (currentDisplay === 'visible') {
                    trueword.style.visibility = 'hidden';
                    ukp.style.visibility = 'hidden';
                    usp.style.visibility = 'hidden';
                } else {
                    trueword.style.visibility = 'visible';
                    ukp.style.visibility = 'visible';
                    usp.style.visibility = 'visible';
                }

            }
            function toggleDisplay(element) {
                // 获取元素的当前 display 样式
                const currentDisplay = window.getComputedStyle(element).display;

                // 根据当前样式切换显示状态
                if (currentDisplay === 'block') {
                    element.style.display = 'none';
                } else {
                    element.style.display = 'block';
                }
            }
            function handleKeyDown(event) {
                if (event.key === 'Enter') {
                    if (event.shiftKey) {
                        getAns();
                    } else {
                        let v = parseInt(word.value);
                        if (v) {
                            check(2);
                        } else {
                            checkword();
                        }
                    }
                }
                if (event.keyCode === 32 && event.shiftKey) {
                    word.focus();
                }
                if (event.key === 'ArrowDown') {
                    check(6);
                }
                if (event.key === 'ArrowUp') {
                    check(3);
                }
                if (event.key === '+') {
                    check(4);
                }
                if (event.key === '-' && !event.shiftKey) {
                    check(5);
                }
            }
            function submitTxt() {
                var formData = new FormData(document.getElementById("dic-upload"));
                var xhr = new XMLHttpRequest();
                xhr.open('POST', '/users/uploadword');
                formData.append("dic", dicname);
                xhr.send(formData);
                xhr.onreadystatechange = function () {
                    if (xhr.readyState === 4) {
                        if (xhr.status >= 200 && xhr.status < 300) {
                            console.log("上传成功");
                            location.reload();
                        } else {
                            console.log("发生错误");
                        }
                    }
                }
            }
        </script>
</body>

</html>